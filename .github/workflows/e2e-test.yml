name: E2E Test
on:
  workflow_call:
    inputs:
      use-existing-server:
        required: false
        type: boolean
      e2e-target:
        required: true
        type: string
      require-published-app:
        required: true
        type: boolean
    secrets:
      GERICHTSFINDER_ENCRYPTION_KEY:
        required: false
      BASE_URL:
        required: false

jobs:
  e2e-tests:
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4]
    permissions:
      packages: read
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cached-checkout-install

      - name: Create certificates
        run: ./create-redis-dummy-certificate.sh

      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages[''].devDependencies['@playwright/test'])")" >> $GITHUB_ENV

      - name: Download Content File
        uses: actions/download-artifact@v4
        with:
          name: content-file

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      - name: Fetch published image app from registry
        if: inputs.require-published-app == true
        run: ./docker.sh --appFromImage && rsync -a ./a2j-app/* ./

      - name: Run Playwright e2e tests
        env:
          GERICHTSFINDER_ENCRYPTION_KEY: "${{ secrets.GERICHTSFINDER_ENCRYPTION_KEY }}"
          E2E_BASE_URL: "${{ secrets.BASE_URL }}"
          E2E_USE_EXISTING_SERVER: "${{ inputs.use-existing-server }}"
        run: CMS=FILE npm run test:e2e -- --shard ${{ matrix.shard }}/${{ strategy.job-total }}

      - name: Upload Playwright blob report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-blob-report-${{ inputs.e2e-target }}-${{ matrix.shard }}
          path: blob-report/*.zip
          retention-days: 1

      - name: Upload Failed Test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: video-test-results-${{ inputs.e2e-target }}-${{ matrix.shard }}
          path: test-results/*
          retention-days: 1

  merge-reports:
    if: failure()
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cached-checkout-install

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: playwright-blob-report-${{ inputs.e2e-target }}-*
          path: playwright-blob-reports

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./playwright-blob-reports

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ inputs.e2e-target }}-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14
