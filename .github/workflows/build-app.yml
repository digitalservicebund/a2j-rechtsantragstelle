name: buildAppImage
on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  code-quality:
    uses: ./.github/workflows/npm-checks.yml
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build-push-app-prod:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build app & prod image
        run: |
          ./docker.sh --build --registry ${{ env.REGISTRY }} app
          ./docker.sh --build --registry ${{ env.REGISTRY }} prod

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@91713af97dc80187565512baba96e4364e983601
        with:
          image-ref: "${{ env.REGISTRY }}/${{ github.repository }}-prod"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@81b419c908d540ec4c7da9bfb4b5d941fca8f624
        with:
          sarif_file: "trivy-results.sarif"
      # - name: run local e2e test
      #   run: tbd
      - name: push app & prod image
        run: |
          ./docker.sh --push --registry ${{ env.REGISTRY }} app
          ./docker.sh --push --registry ${{ env.REGISTRY }} prod
  # deploy-staging:
  #   needs: [build-push-app-prod]
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   steps:
  #     - name: Report Deployment
  #       uses: digitalservicebund/github-actions/track-deployment@34a48d29a9c4cc2fd6710b8eb37e13618a08fa88
  #       with:
  #         project: a2j-rechtsantragstelle
  #         environment: staging
  #         metrics_deployment_webhook_url: ${{ secrets.METRICS_DEPLOYMENT_WEBHOOK_URL }}
  #         metrics_webhook_token: ${{ secrets.METRICS_WEBHOOK_TOKEN }}

  #     - name: Deploy new staging image
  #       uses: digitalservicebund/github-actions/argocd-deploy@a223a68bc5982e5175beb73c708d99d8f9ba7858
  #       with:
  #         environment: staging
  #         version: ${{ env.IMAGE_VERSION }}-${{ needs.create-content-file.outputs.content_checksum }}
  #         deploying_repo: a2j-rechtsantragstelle
  #         infra_repo: a2j-rechtsantragstelle-infra
  #         deploy_key: ${{ secrets.DEPLOY_KEY }}
  #         app: a2j-rast-staging
  #         argocd_pipeline_password: ${{ secrets.ARGOCD_PIPELINE_PASSWORD }}
  #         argocd_server: ${{ secrets.ARGOCD_SERVER }}
  #         argocd_sync_timeout: 300
